// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   // e.g., admin, project manager, team member
  projects  Project[] @relation("UserProjects")
  tasks     Task[]    @relation("UserTasks")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  status      String   // e.g., ongoing, completed
  startDate   DateTime
  endDate     DateTime?
  owner       User     @relation("UserProjects", fields: [ownerId], references: [id])
  ownerId     Int
  tasks       Task[]   @relation("ProjectTasks")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  status      String   // e.g., pending, in progress, completed
  priority    String   // e.g., low, medium, high
  dueDate     DateTime?
  assignedTo  User     @relation("UserTasks", fields: [assignedToId], references: [id])
  assignedToId Int
  project     Project  @relation("ProjectTasks", fields: [projectId], references: [id])
  projectId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
